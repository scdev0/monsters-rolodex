{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/SearchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","handleChange","placeholder","type","onChange","App","e","setState","searchString","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIaA,EAAO,SAACC,GAAW,IACtBC,EAAYD,EAAZC,QACR,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BJ,EAAMC,QAAQI,GAAxC,4BACtB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCJLC,G,MAAW,SAACR,GAAW,IAC1BS,EAAaT,EAAbS,SACR,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCTdM,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACxC,OACE,uBAAOX,UAAU,SAASY,KAAK,SAASD,YAAaA,EAAaE,SAAUH,KCsCjEI,G,wDAnCb,WAAYhB,GAAQ,IAAD,8BACjB,gBAcFY,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,aAAcF,EAAEG,OAAOC,SAbvC,EAAKC,MAAQ,CACXb,SAAU,GACVU,aAAc,IALC,E,qDASnB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO/C,WAAU,IAAD,EAC4BC,KAAKN,MAAhCb,EADD,EACCA,SAAUU,EADX,EACWA,aACZU,EAAmBpB,EAASqB,QAAO,SAAC7B,GAAD,OACvCA,EAAQK,KAAKyB,cAAcC,SAASb,EAAaY,kBAGnD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKhB,aAAcC,YAAY,oBACxD,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BVI,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.88796e8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nexport const Card = (props) => {\r\n  const { monster } = props;\r\n  return (\r\n    <div className='card-container'>\r\n      <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Card } from '../Card/Card';\r\n\r\nimport './CardList.css';\r\n\r\nexport const CardList = (props) => {\r\n  const { monsters } = props;\r\n  return (\r\n    <div className='card-list'>\r\n      {monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const SearchBox = ({ handleChange, placeholder }) => {\r\n  return (\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\r\n  );\r\n};\r\n","import React from 'react';\n\nimport { CardList } from './components/CardList/CardList';\nimport { SearchBox } from './components/SearchBox/SearchBox';\n\nimport './App.css';\nclass App extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchString: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchString: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchString } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchString.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox handleChange={this.handleChange} placeholder='search monsters' />\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}